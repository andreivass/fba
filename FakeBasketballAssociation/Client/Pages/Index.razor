@page "/"
@page "/index"
@inject FakeBasketballAssociation.Client.Repository.IPlayerRepository playersRepo
@inject FakeBasketballAssociation.Client.Repository.IVoteRepository votesRepo
@using FakeBasketballAssociation.Shared.Entities

<h3>Welcome to the FBA - the Fake Basketball Association</h3>
<AuthorizeView>
    <Authorized>
        @if (VoteLockedText)
        {
            <h4>You have already voted, thanks! Come back next year.</h4>
        }
        else
        {
            <h4>Choose wisely, only one vote for you!</h4>
        }
    </Authorized>
    <NotAuthorized>
        <h4>Login or register to get access to voting.</h4>
    </NotAuthorized>
</AuthorizeView>

<div class="container">
    <PlayersList PlayersAll="@SortedPlayerDTOs" ChangeVoteLock="ChangeVoteLock"/>
</div>

@code{

    private List<PlayerDTO> PlayerDTOs;
    private List<PlayerDTO> SortedPlayerDTOs;
    private List<Vote> Votes;
    private bool VoteLockedText { get; set; } = false;

    protected async override Task OnInitializedAsync()
    {

        PlayerDTOs = await playersRepo.GetNbaPlayers();

        Votes = await votesRepo.GetVotes();
        foreach (var vote in Votes)
        {
            var playerForVote = PlayerDTOs.Where(p => p.PlayerId == vote.PlayerId).FirstOrDefault();
            playerForVote.VotesTemp++;
        }

        SortedPlayerDTOs = PlayerDTOs.OrderByDescending(p => p.VotesTemp).ToList();
    }

    private void ChangeVoteLock()
    {
        VoteLockedText = !VoteLockedText;
    }
}
