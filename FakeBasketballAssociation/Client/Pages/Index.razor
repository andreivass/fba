@page "/"
@inject FakeBasketballAssociation.Client.Repository.IPlayerRepository playersRepo
@using FakeBasketballAssociation.Shared.Entities

<h2>Welcome to the FBA</h2>

<h4>MVP voting to begin soon</h4>
<div class="row">
    <div class="col-sm-12 col-md-6 col-xl-4">

        <PlayersList PlayersAll="@PlayerDTOs" />
    </div>
</div>
@*<div class="card-group">
    <div class="card">
        <img src="..." class="card-img-top" alt="...">
        <div class="card-body">
            <h5 class="card-title">Card title</h5>
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
            <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
        </div>
    </div>
    <div class="card">
        <img src="..." class="card-img-top" alt="...">
        <div class="card-body">
            <h5 class="card-title">Card title</h5>
            <p class="card-text">This card has supporting text below as a natural lead-in to additional content.</p>
            <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
        </div>
    </div>
    <div class="card">
        <img src="..." class="card-img-top" alt="...">
        <div class="card-body">
            <h5 class="card-title">Card title</h5>
            <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This card has even longer content than the first to show that equal height action.</p>
            <p class="card-text"><small class="text-muted">Last updated 3 mins ago</small></p>
        </div>
    </div>
</div>*@


    @code{
        //private List<Player> Players;
        private List<PlayerDTO> PlayerDTOs;

        protected async override Task OnInitializedAsync()
        {

            PlayerDTOs = await playersRepo.GetNbaPlayers();
            //Players = await playersRepo.GetPlayers();
            @*foreach (var item in Players)
                {
                    PlayerDTOs.Add(await playersRepo.GetNbaPlayer(item.NbaId));
                }*@

        }
    }
